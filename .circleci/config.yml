version: 2.1

variables:
  - &workspace /home/circleci/project

jobs:
  checkout_repository:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - persist_to_workspace:
          root: *workspace
          paths:
            - .

  test:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Run unit tests
          command: |
            make test

  build:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Build docker image
          command: |
            make build

  bump:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Increment version tag
          command: |
            curl -o /tmp/ghr.tar.gz -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
            tar xzf /tmp/ghr.tar.gz --strip-components=1 -C /tmp

            COMMIT_MSG=$(git log -1 --pretty=%B | cat)
            COMMIT_MSG=b="$(echo $COMMIT_MSG | tr '[A-Z]' '[a-z]')"
            if [[ ${COMMIT_MSG} =~ ^.*\#major.*$ ]]; then
              SCOPE=major
            elif [[ ${COMMIT_MSG} =~ ^.*\#minor.*$ ]]; then
              SCOPE=minor
            else
              SCOPE=patch
            fi

            VERSION=$(./scripts/semtag final -s ${SCOPE} -o)

            ssh-keyscan -p 443 ssh.github.com >> ~/.ssh/known_hosts
            /tmp/ghr -t ${GITHUB_PAT} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION}
            echo ${VERSION} > VERSION
      - persist_to_workspace:
          root: *workspace
          paths:
            - .

  publish:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          name: Publish Docker image to ECR
          command: |
            make publish

  deploy_staging:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - run: echo "This step deploys to staging environment"

  deploy_production:
    docker:
      - image: circleci/python:3.8
    working_directory: *workspace
    steps:
      - run: echo "This step deploys to production environment"

workflows:
  version: 2

  test_branch:
    jobs:
      - checkout_repository
      - test:
          requires:
            - checkout_repository

  deploy_release:
    jobs:
      - checkout_repository:
          filters:
            branches:
              only: /dev/
      - bump:
          requires:
            - checkout_repository
      - build:
          requires:
            - bump
      - publish:
          requires:
            - build
      - deploy_staging:
          requires:
            - publish
      - hold_deploy_production:
          type: approval
          requires:
            - publish
      - deploy_production:
          requires:
            - hold_deploy_production
